---
title: "Visualizations"
format: html
editor: visual
---

## Gender/race distribution

Please remember to have the data loaded before running this script.

```{r,message=FALSE,warning=FALSE}

library(tidyverse)

```

```{r}

plot_data <- diabetes_data |>
  select(patient_nbr,race,gender) |>
  distinct(patient_nbr, .keep_all = TRUE) |>
  mutate(race = ifelse(is.na(race), "Other", race)) |>
  group_by(race, gender) |>
  summarise(count = n(), .groups = "drop") |>
  mutate(text_color = ifelse(count > 4000, "white", 
                             ifelse(gender=='Female','hotpink',
                                    ifelse(gender=='Male','cornflowerblue','grey35'))))
  
ggplot(plot_data, aes(x=race, y=count,
             fill=gender)) +
  geom_bar(stat='identity',
           position = 'stack') +
   geom_text(data = plot_data |> filter(count > 4000), 
            aes(label = count, color = text_color, vjust = 0.5),
            position = position_stack(vjust = 0.5),  
            size = 4) +

  geom_text(data = plot_data |> filter(count <= 4000), 
            aes(label = count, color = text_color, vjust = -3),
            position = position_dodge2(width=0.8),  
            size = 4) +
  scale_color_identity() +
  labs(x = "Race", 
       y = "Count", 
       fill = "Gender",
      title = str_c('Gender/race distribution of dataset, total no. of patients: ',
                    sum(plot_data$count))) +
  scale_fill_manual(values = c('hotpink',
                               'cornflowerblue',
                               'grey35')) +
  theme_minimal() +
  theme(legend.position = 'bottom')
```

## Visits plot

```{r}
diabetes_data |>
  select(patient_nbr,gender) |>
  group_by(patient_nbr) |>
  mutate(number_of_visits = n()) |>
  distinct(patient_nbr,.keep_all = TRUE) |>
  ungroup() |>
  select(gender, number_of_visits) |>
  group_by(number_of_visits,gender) |>
  summarise(count = n(), .groups = 'drop') |>
  ggplot(aes(x = number_of_visits, y = gender)) + 
  geom_count(aes(color = gender, 
                 size = count,  
                 shape = factor(count)),
      position = position_jitter(height = 0.2)) +
  labs(x = "Number of visits",
       y = "Gender",
       title = "Number of visits by gender") +
  scale_color_manual(values = c("hotpink", "cornflowerblue", "grey35")) +
  scale_size_continuous(
    range = c(2, 10), 
    trans = 'sqrt',  
    breaks = c(1, 5, 100, 1000, 10000, 20000),
    labels = c('1', '5', '100', '1000', '10000', '20000+')) +
  scale_shape_manual(values=c(17,rep(16, 28))) +  
  theme_minimal() +
  theme(legend.position = 'bottom',
        legend.justification = "center") +
        guides( color = guide_none(),
          size = guide_legend(title = "Counts", 
                        override.aes = list(shape = c(17,rep(16,5))),
                        ncol = 6),  
          shape = guide_none()) +
  coord_flip()
```

## Diagnosis vs. visits

```{r}

diagnosis <- diabetes_data |>
  select(patient_nbr, number_diagnoses) |>
  group_by(patient_nbr) |>
  mutate(visit_num = row_number()) |>  # Create a visit number for each patient
  ungroup() |>
  pivot_wider(
    names_from = visit_num,                # Visit number will be the new column names
    values_from = number_diagnoses,        # Number of diagnoses for each visit
    names_prefix = "visit_",               # Prefix for new column names (e.g., visit_1, visit_2)
    values_fill = list(number_diagnoses = NA)  # Fill missing values with NA
  )
```

```{r}
diagnosis |>
  filter(if_all(c(-patient_nbr,-visit_1), is.na)) |>
  ggplot(aes(x=visit_1)) +
  geom_boxplot() +
  labs(title = 'Amount of diagnoses for people with only 1 visit',
       x ='Number of diagnoses') 
```

```{r}
diagnosis |>
  filter(if_all(c(-patient_nbr,-visit_1,-visit_2), is.na)) |>
  filter(!if_all(visit_2,is.na)) |>
  select(patient_nbr,visit_1,visit_2) |>
  pivot_longer(cols = c(visit_1,visit_2),
               names_to = 'visit') |>
  ggplot(aes(x=value,fill=visit)) +
  geom_boxplot() +
  labs(title = 'Amount of diagnoses for people with 2 visits',
       x ='Number of diagnoses') 
```

```{r}
diagnosis |>
  filter(if_all(c(-patient_nbr,-visit_1,-visit_2,-visit_3), is.na)) |>
  filter(!if_all(visit_3,is.na)) |>
  select(patient_nbr,visit_1,visit_2,visit_3) |>
  pivot_longer(cols = c(visit_1,visit_2,visit_3),
               names_to = 'visit') |>
  ggplot(aes(x=value,fill=visit)) +
  geom_boxplot() +
  labs(title = str_c('Amount of diagnoses for people with 3 visits (',
                     diagnosis |>
                       filter(if_all(c(-patient_nbr,-visit_1,-visit_2,-visit_3), is.na)) |>
                       filter(!if_all(c(visit_3),is.na)) |>
                       pull(patient_nbr) |>
                       length(),
                     ' people)'),
       x ='Number of diagnoses') 
```

## Plot of average of number of diagnosis per patient per visit:

```{r}
diagnosis |>
  pivot_longer(cols = !patient_nbr,
               names_to = 'visit',
               values_to = 'diagnosis') |>
  drop_na(diagnosis) |>
  group_by(visit) |>
  summarise(mean_diagnosis = mean(diagnosis), no_people = n()) |>
  mutate(visit = str_extract(visit, "\\d+"),
         visit = factor(visit,levels=sort(as.numeric(visit)))) |>
  ggplot(aes(x=visit,y=mean_diagnosis)) +
  geom_point(aes(color=no_people),size=3) +
  scale_color_gradient2(low='hotpink',
                     mid='orange',
                     high='cornflowerblue',
                     midpoint=12000,
                     limits=c(2,NA),
                     n.breaks=5,
                     transform = 'sqrt',
                     na.value = 'forestgreen',
                     guide = guide_colorbar(title = "Amount of people")
                     ) +
  theme(axis.text.x=element_text(angle=90,hjust=1)) + 
  labs(title = 'Average number of diagnosis by maximum amount of visits by patient',
       subtitle = 'Green dots signify 1 person',
       x = 'Maximum amount of visits by patients',
       y = 'Average number of diagnoses') 
    
```
