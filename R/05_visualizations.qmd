---
title: "Visualizations"
format: html
editor: visual
---

## Libraries

```{r,message=FALSE,warning=FALSE}

library(tidyverse)
library(here)
```

## Load data

```{r}
data <- read.csv(here("data/03_dat_aug.csv"))
```

## Age distribution

```{r}
data |>
  filter(gender != "Unknown/Invalid") |>
  group_by(age, gender) |>
  summarize(average_diagnoses = mean(number_diagnoses), .groups = "drop") |>
ggplot(aes(x = age,
                y = average_diagnoses,
                fill = gender)) +
  geom_col(position = "dodge") +
  labs(x = "Age Group",
       y = "Average number of diagnoses",
       fill = "Gender",
       Title = "Average number of diagnoses for all age groups and genders") +
  scale_fill_manual(values=c('hotpink',
                             'cornflowerblue',
                             'grey35')) 
```

## Age distribution, shown by race

```{r}
data |>
  filter(gender != "Unknown/Invalid", 
         race != "Other") |>
  group_by(age, 
           gender, 
           race) |> 
  summarize(average_diagnoses = mean(number_diagnoses), .groups = "drop") |> 
  ggplot(mapping = aes(x = age,
                y = average_diagnoses,
                fill = gender)) +
  geom_col(position = "dodge", 
           alpha = 1.0) +
  facet_wrap(~ race) +
  labs(
    x = "Age Group",
    y = "Average number of diagnoses",
    fill = "Gender",
    title = 
      "Average number of diagnoses for all age groups and genders \n facet wrapped for race") +
  scale_fill_manual(values=c('hotpink',
                             'cornflowerblue',
                             'grey35')) +
    theme_minimal() +
    theme(axis.text.x = element_text(angle = 60, hjust =1))

```

## Race/gender distribution

```{r}
plot_data <- data |>
  select(patient_nbr, race, gender) |>
  distinct(patient_nbr, .keep_all = TRUE) |>
  mutate(race = ifelse(is.na(race), "Other", race)) |>
  group_by(race, gender) |>
  summarise(count = n(), .groups = "drop") |>
  mutate(text_color = 
           ifelse(count > 4000, "white", 
              ifelse(gender == "Female", "hotpink",
                 ifelse(gender == "Male", "cornflowerblue", "grey35"))))

ggplot(plot_data, aes(x = race, y = count, fill = gender)) +
  geom_bar(stat = "identity", position = "stack") +
  geom_text(
    data = plot_data |> filter(count > 4000), 
    aes(label = count, color = text_color), 
    position = position_stack(vjust = 0.5), 
    size = 4
  ) +
  geom_text(
    data = plot_data |> filter(count <= 4000), 
    aes(label = count, color = text_color), 
    position = position_dodge2(width = 0.8), 
    size = 4
  ) +
  scale_color_identity() +
  labs(
    x = "Race", 
    y = "Count", 
    fill = "Gender",
    title = str_c("Gender/race distribution of dataset, total no. of patients: ", 
                  sum(plot_data$count))
  ) +
  scale_fill_manual(values = c("hotpink", "cornflowerblue", "grey35")) +
  theme_minimal() +
  theme(legend.position = "bottom")
```

## Discharge disposition

```{r, fig.width=8, fig.height=6}
data |>
  group_by(discharge_disposition,
           gender,
           age)|> 
  summarize(n = n(),.groups = 'keep') |> 
  drop_na(discharge_disposition) |>
  ggplot(
    mapping = aes(x = discharge_disposition,
                  y = n,
                  fill = age)
  ) +
  geom_col(position = "dodge") +
  labs(
    x = "Discharge type",
    y = "Count",
    fill = "Age group",
    title = "Discharge type for all age groups for all admission types"
  ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 60, hjust =1)
    )

```

### Only for emergency admission type

```{r, fig.width=8, fig.height=6}
data |>
  filter(!discharge_disposition %in% c("NULL",
                                       "Not Available",
                                       "Not Mapped"),
         admission_type == "Emergency") |> 
  group_by(discharge_disposition,
           gender,
           age)|> 
  summarize(n = n(),.groups = 'keep') |> 
  drop_na(discharge_disposition) |>
  ggplot(
    mapping = aes(x = discharge_disposition,
                  y = n,
                  fill = age)
  ) +
  geom_col(position = "dodge") +
  labs(
    x = "Discharge type",
    y = "Count",
    fill = "Age group",
    title = "Discharge type for all age groups for emergency admissions"
  ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 60, hjust =1)
    )

```

### Only urgent admission type:

```{r, fig.width=8, fig.height=6}
data |>
  filter(gender != "Unknown/Invalid",
         !discharge_disposition %in% c("NULL",
                                       "Not Available",
                                       "Not Mapped"),
         admission_type == "Urgent") |> 
  group_by(discharge_disposition,
           gender,
           age)|> 
  summarize(n = n(),.groups = 'keep') |> 
  drop_na(discharge_disposition) |>
  ggplot(
    mapping = aes(x = discharge_disposition,
                  y = n,
                  fill = age)
  ) +
  geom_col(position = "dodge") +
  labs(
    x = "Discharge type",
    y = "Count",
    fill = "Age group",
    title = "Discharge type for all age groups for urgent admissions"
  ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 60, hjust =1)
    )

```

### For elective admission type

```{r, fig.width=8, fig.height=6}
data |>
  filter(gender != "Unknown/Invalid",
         !discharge_disposition %in% c("NULL",
                                       "Not Available",
                                       "Not Mapped"),
         admission_type == "Elective") |> 
  group_by(discharge_disposition,
           gender,
           age)|> 
  summarize(n = n(),.groups = 'keep') |>
  drop_na(discharge_disposition) |>
  ggplot(
    mapping = aes(x = discharge_disposition,
                  y = n,
                  fill = age)
  ) +
  geom_col(position = "dodge") +
  labs(
    x = "Discharge type",
    y = "Count",
    fill = "Age group",
    title = "Discharge type for all age groups for elective admissions"
  ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 60, hjust =1)
    )

```

## Number of visits per patient

```{r}
data |>
  select(patient_nbr,gender) |>
  group_by(patient_nbr) |>
  mutate(number_of_visits = n()) |>
  distinct(patient_nbr,.keep_all = TRUE) |>
  ungroup() |>
  select(gender, number_of_visits) |>
  group_by(number_of_visits,gender) |>
  summarise(count = n(), .groups = 'drop') |>
  ggplot(aes(x = number_of_visits, y = gender)) + 
  geom_count(aes(color = gender, 
                 size = count,  
                 shape = factor(count)),
      position = position_jitter(height = 0.2)) +
  labs(x = "Number of visits",
       y = "Gender",
       title = "Number of visits by gender") +
  scale_color_manual(values = c("hotpink", "cornflowerblue", "grey35")) +
  scale_size_continuous(
    range = c(2, 10), 
    trans = 'sqrt',  
    breaks = c(1, 5, 100, 1000, 10000, 20000),
    labels = c('1', '5', '100', '1000', '10000', '20000+')) +
  scale_shape_manual(values=c(17,rep(16, 28))) +  
  theme_minimal() +
  theme(legend.position = 'bottom',
        legend.justification = "center") +
        guides( color = guide_none(),
          size = guide_legend(title = "Counts", 
                        override.aes = list(shape = c(17,rep(16,5))),
                        ncol = 6),  
          shape = guide_none()) +
  coord_flip()
```

## Diagnosis vs. visits

```{r}
data |>
  filter(nr_encounters == 1) |>
  select(patient_nbr, number_diagnoses, gender) |>
  group_by(patient_nbr) |>
  mutate(visit_num = row_number()) |>
  ungroup() |>
  pivot_wider(
    names_from = visit_num,                
    values_from = number_diagnoses,        
    names_prefix = "visit_",          
    values_fill = list(number_diagnoses = NA)) |>
  ggplot(aes(x=visit_1,fill=gender)) +
  geom_boxplot() +
  labs(title = 'Amount of diagnoses for people with only 1 visit',
       x ='Number of diagnoses',
       fill = 'Gender') + 
  scale_fill_manual(values=c('hotpink',
                             'cornflowerblue',
                             'grey35')) 
  
```

```{r}
data |>
  filter(nr_encounters == 2) |>
  select(patient_nbr, number_diagnoses,encounter_id) |>
  group_by(patient_nbr) |>
  arrange(encounter_id, .by_group = TRUE) |>
  mutate(visit_num = row_number()) |>
  ungroup() |>
  select(-encounter_id) |>
  pivot_wider(
    names_from = visit_num,                
    values_from = number_diagnoses,        
    names_prefix = "visit_",          
    values_fill = list(number_diagnoses = NA)) |>
  pivot_longer(cols = -patient_nbr,
               names_to = 'visit') |>
  ggplot(aes(x=value,fill=visit)) +
  geom_boxplot() +
  labs(title = str_c('Amount of diagnoses for people with 2 visits (',
                      data |>
                       filter(nr_encounters == 2) |>
                       pull(patient_nbr) |>
                       unique() |>
                       length(),
                     ' people)'),
       x ='Number of diagnoses',
       fill = 'Visit number') 
```

```{r}
data |>
  filter(nr_encounters == 3) |>
  select(patient_nbr, number_diagnoses, encounter_id) |>
  group_by(patient_nbr) |>
  arrange(encounter_id, .by_group = TRUE) |>
  mutate(visit_num = row_number()) |>
  ungroup() |>
  select(-encounter_id) |>
  pivot_wider(
    names_from = visit_num,                
    values_from = number_diagnoses,        
    names_prefix = "visit_",          
    values_fill = list(number_diagnoses = NA)) |>
  pivot_longer(cols = -patient_nbr,
               names_to = 'visit') |>
  ggplot(aes(x=value,fill=visit)) +
  geom_boxplot() +
  labs(title = str_c('Amount of diagnoses for people with 3 visits (',
                     data |>
                       filter(nr_encounters == 3) |>
                       pull(patient_nbr) |>
                       unique() |>
                       length(),
                     ' people)'),
       x ='Number of diagnoses',
       fill = 'Visit number') 
```

## Plot of average of number of diagnosis per patient per maximum visit:

```{r}
data |>
  select(patient_nbr, number_diagnoses,encounter_id) |>
  group_by(patient_nbr) |>
  arrange(encounter_id, .by_group = TRUE) |>
  mutate(visit_num = row_number()) |>
  ungroup() |>
  select(-encounter_id) |>
  pivot_wider(
    names_from = visit_num,                
    values_from = number_diagnoses,        
    names_prefix = "visit_",          
    values_fill = list(number_diagnoses = NA)) |>
  pivot_longer(cols = c(-patient_nbr),
               names_to = 'visit',
               values_to = 'diagnosis') |>
  drop_na(diagnosis) |>
  group_by(visit) |>
  summarise(mean_diagnosis = mean(diagnosis), no_people = n()) |>
  mutate(visit = str_extract(visit, "\\d+"),
         visit = factor(visit,levels=sort(as.numeric(visit)))) |>
  ggplot(aes(x=visit,y=mean_diagnosis)) +
  geom_point(aes(color=no_people),size=3) +
  scale_color_gradient2(low='hotpink',
                     mid='orange',
                     high='cornflowerblue',
                     midpoint=12000,
                     limits=c(2,NA),
                     n.breaks=5,
                     transform = 'sqrt',
                     na.value = 'forestgreen',
                     guide = guide_colorbar(title = "Amount of people")
                     ) +
  theme_minimal() +
  theme(axis.text.x=element_text(angle=90,hjust=1)) + 
  labs(title = 'Average number of diagnoses per visit by patient',
       subtitle = '- Green dots signify 1 person',
       x = 'Number of visit by patients',
       y = 'Average number of diagnoses') 
    
```

## Most common primary diagnoses compared to number of visits

```{r}
data |>
  select(patient_nbr, encounter_id, nr_encounters, diag_1_long) |>
  group_by(diagnosis = diag_1_long) |>
  summarise(count = n(), .groups = "drop") |>
  top_n(15, count) |>
  inner_join(data, by = c("diagnosis" = "diag_1_long")) |>
  group_by(nr_encounters, diagnosis) |>
  summarise(diagnosis_count = n(), .groups = "drop") |>
  mutate(diagnosis = str_trim(str_extract(diagnosis, paste0("^\\S+(\\s+\\S+){0,6}")))) |>
  ggplot(aes(x = factor(nr_encounters), y = diagnosis, fill = diagnosis_count)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "orange", high = "purple") +
  labs(
    x = "Number of visits",
    y = "",
    fill = "Count",
    title = "Top 15 most common primary diagnoses across all visits"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1),
        legend.position = 'bottom',
        axis.text.y = element_text(angle=20),
        plot.title = element_text(hjust = 1.5))
```

### Gender discrepancy for patients

```{r}
data |>
  group_by(patient_nbr) |>
  filter(n_distinct(gender) > 1) |>
  arrange(encounter_id, .by_group = TRUE)
```

## Diabetes types
