---
title: "PCA analysis"
format: html
editor: visual
---

### Import dataset

This is an example trial run. The real data should be imported below as clean data:

```{r}
library(tidyverse)
library(broom)  # devtools::install_github("tidymodels/broom")
library(cowplot)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
```

### Start of the PCA

Looking at the data in PC coordinates:

```{r}
numeric_data <- aug_data |> 
  select(where(is.numeric)) |> 
  na.omit() |> 
  select(where(~ var(., na.rm = TRUE) > 0))

pca_fit <- numeric_data |>  
  prcomp(scale = TRUE) 

data_clean <- aug_data |> 
  filter(row_number() %in% rownames(numeric_data))

pca_plot <- pca_fit |> 
  augment(data_clean) |>  
  ggplot(aes(.fittedPC1, .fittedPC2)) + 
  geom_point(size = 1.5) +
  theme_half_open(12) +
  background_grid()
pca_plot
```

Now we extract the rotation matrix

```{r}
# extract rotation matrix
pca_fit |> 
  tidy(matrix = "rotation")
```

and plot it:

```{r}
# arrow for plotting
arrow_style <- arrow(
  angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)

# rotation matrix
pca_fit |> 
  tidy(matrix = "rotation") |> 
  pivot_wider(names_from = "PC",
              names_prefix = "PC",
              values_from = "value") |> 
  ggplot(aes(PC1, PC2)) +
  geom_segment(xend = 0,
               yend = 0,
               arrow = arrow_style) +
  geom_text_repel(
    aes(label = column),
    hjust = 1, nudge_x = -0.02, 
    color = "#904C2F"
  ) +
  xlim(-1.25, .5) +
  ylim(-.5, 1) +
  coord_fixed() +  # fix aspect ratio to 1:1
  theme_minimal_hgrid(12)
```

Look at the variance

```{r}
pca_fit |> 
  tidy(matrix = "eigenvalues")
```

And now the plot:

```{r}
pca_bar_plot <- pca_fit |> 
  tidy(matrix = "eigenvalues") |> 
  ggplot(aes(PC, percent)) +
  geom_col(fill = "#56B4E9",
           alpha = 0.8) +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  theme_minimal_hgrid(12)
pca_bar_plot
```

It is seen that 22.5% of the variance is explained by PC1.

### Exporting the key plots

```{r}
ggsave(
  filename = here("results", "05_pca_plot.png"),
  plot = pca_plot, 
  width = 8, 
  height = 6, 
  dpi = 300
)

ggsave(
  filename = here("results", "05_pca_bar_plot.png"),  
  plot = pca_bar_plot, 
  width = 8, 
  height = 6, 
  dpi = 300
)
```

#### My try to cluster things

```{r}
library(ggplot2)

# Assuming pca_fit has been created and contains PCA results
pca_data <- as.data.frame(pca_fit$x)  # Extract PCA scores

# Plotting PC1 vs PC2, and using PC3 to determine the color
ggplot(pca_data, aes(x = PC1, y = PC2, color = PC3)) + 
  geom_point(size = 1.5) +
  theme_minimal() +
  labs(x = "PC1", y = "PC2", color = "PC3") +
  scale_color_gradient(low = "blue", high = "red")  # Color scale for PC3

```

```{r}
# Example: k-means clustering using the first three PCs
kmeans_result <- kmeans(pca_data[, 1:3], centers = 3)  # Cluster into 3 groups
pca_data$cluster <- as.factor(kmeans_result$cluster)

# Plot the clusters in 2D (using PC1 and PC2)
ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +
  geom_point() +
  theme_minimal()
```
