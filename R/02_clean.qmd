---
title: "Load project data"
format: html
editor: visual
---

## Load libraries

```{r, message=FALSE}
suppressWarnings({
library("tidyverse")
library("here")
library("broom")
})
```

## Clean the meta data

```{r}
suppressWarnings({
meta_data <- read.csv(here("data/IDS_mapping.csv"), 
                      na.strings = "")

# Remove NA columns and add a column based on admission type, that is numeric. The NA values in this, will be the names of the type of metadata the id describes. Also adds a meta_type column that will be used for storing this name later
meta_data <- meta_data |> 
  na.omit() |> 
  mutate(admission_type_id, 
         admission_type_id_as_num = as.numeric(admission_type_id)) |> 
  mutate(meta_type = NA)

name <- meta_data |> 
  colnames() |> 
  first()

#Goes through all rows and adds the defined name to the meta_type column. If the admission_type_id_as_num is NA, the name changes 
for (i in 1:nrow(meta_data)){
  row <- meta_data |> 
    select(admission_type_id_as_num) |> 
    slice(i)
  
  if(is.na(row)){
    name <- meta_data |> 
      select(admission_type_id) |> 
      slice(i)
  }
  
  meta_data <- meta_data |> 
    mutate(meta_type = ifelse(row_number() == i, 
                              name ,meta_type))
}

#Removes the rows containing the names, drops admission_type_is_as_num and renames the first column to type id.
meta_data_clean <- meta_data |> 
  filter(!is.na(admission_type_id_as_num)) |> 
  select(!admission_type_id_as_num) |> 
  rename(type_id = admission_type_id)

})
```

## Clean diabetes data

```{r}
diabetes_data <- read.csv(here("data/diabetic_data.csv"), 
                          na.strings = c("?", "None"))
diabetes_data 
```

```{r}
#Change NO in readmitted column to No
diabetes_data <- diabetes_data |> 
  mutate(readmitted, 
         readmitted = str_replace(string = readmitted, 
                                  "NO", 
                                  "No"))

#Change Ch in change column to Yes
diabetes_data <- diabetes_data |> 
  mutate(change, 
         change = str_replace(string = change, 
                                  "Ch", 
                                  "Yes"))


```

## Add information from metadata to diabetes data

```{r}

```

## Output clean data

```{r}
write_csv(diabetes_data, here("data/02_dat_clean.csv"))
```
