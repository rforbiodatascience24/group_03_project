data |>
select(patient_nbr,race,gender) |>
distinct(patient_nbr, .keep_all = TRUE) |>
mutate(race = ifelse(is.na(race), "Other", race)) |>
group_by(race, gender) |>
summarise(count = n(), .groups = "drop") |>
mutate(text_color = ifelse(count > 4000, "white",
ifelse(gender=='Female','hotpink',
ifelse(gender=='Male','cornflowerblue','grey35')))) |>
ggplot(aes(x=race, y=count,
fill=gender)) +
geom_bar(stat='identity',
position = 'stack') +
geom_text(data = plot_data |> filter(count > 4000),
aes(label = count, color = text_color, vjust = 0.5),
position = position_stack(vjust = 0.5),
size = 4) +
geom_text(data = plot_data |> filter(count <= 4000),
aes(label = count, color = text_color, vjust = -3),
position = position_dodge2(width=0.8),
size = 4) +
scale_color_identity() +
labs(x = "Race",
y = "Count",
fill = "Gender",
title = str_c('Gender/race distribution of dataset, total no. of patients: ',
sum(plot_data$count))) +
scale_fill_manual(values = c('hotpink',
'cornflowerblue',
'grey35')) +
theme_minimal() +
theme(legend.position = 'bottom')
plot_data <- data |>
select(patient_nbr,race,gender) |>
distinct(patient_nbr, .keep_all = TRUE) |>
mutate(race = ifelse(is.na(race), "Other", race)) |>
group_by(race, gender) |>
summarise(count = n(), .groups = "drop") |>
mutate(text_color = ifelse(count > 4000, "white",
ifelse(gender=='Female','hotpink',
ifelse(gender=='Male','cornflowerblue','grey35')))) |>
ggplot(aes(x=race, y=count,
fill=gender)) +
geom_bar(stat='identity',
position = 'stack') +
geom_text(data = plot_data |> filter(count > 4000),
aes(label = count, color = text_color, vjust = 0.5),
position = position_stack(vjust = 0.5),
size = 4) +
geom_text(data = plot_data |> filter(count <= 4000),
aes(label = count, color = text_color, vjust = -3),
position = position_dodge2(width=0.8),
size = 4) +
scale_color_identity() +
labs(x = "Race",
y = "Count",
fill = "Gender",
title = str_c('Gender/race distribution of dataset, total no. of patients: ',
sum(plot_data$count))) +
scale_fill_manual(values = c('hotpink',
'cornflowerblue',
'grey35')) +
theme_minimal() +
theme(legend.position = 'bottom')
# Prepare the data
plot_data <- data |>
select(patient_nbr, race, gender) |>
distinct(patient_nbr, .keep_all = TRUE) |>
mutate(race = ifelse(is.na(race), "Other", race)) |>
group_by(race, gender) |>
summarise(count = n(), .groups = "drop") |>
mutate(text_color = ifelse(count > 4000, "white",
ifelse(gender == "Female", "hotpink",
ifelse(gender == "Male", "cornflowerblue", "grey35"))))
# Create the plot
ggplot(plot_data, aes(x = race, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(
data = plot_data |> filter(count > 4000),
aes(label = count, color = text_color),
position = position_stack(vjust = 0.5),
size = 4
) +
geom_text(
data = plot_data |> filter(count <= 4000),
aes(label = count, color = text_color),
position = position_dodge2(width = 0.8),
size = 4
) +
scale_color_identity() +
labs(
x = "Race",
y = "Count",
fill = "Gender",
title = str_c("Gender/race distribution of dataset, total no. of patients: ",
sum(plot_data$count))
) +
scale_fill_manual(values = c("hotpink", "cornflowerblue", "grey35")) +
theme_minimal() +
theme(legend.position = "bottom")
plot_data <- data |>
select(patient_nbr, race, gender) |>
distinct(patient_nbr, .keep_all = TRUE) |>
mutate(race = ifelse(is.na(race), "Other", race)) |>
group_by(race, gender) |>
summarise(count = n(), .groups = "drop") |>
mutate(text_color = ifelse(count > 4000, "white",
ifelse(gender == "Female", "hotpink",
ifelse(gender == "Male", "cornflowerblue", "grey35"))))
ggplot(plot_data, aes(x = race, y = count, fill = gender)) +
geom_bar(stat = "identity", position = "stack") +
geom_text(
data = plot_data |> filter(count > 4000),
aes(label = count, color = text_color),
position = position_stack(vjust = 0.5),
size = 4
) +
geom_text(
data = plot_data |> filter(count <= 4000),
aes(label = count, color = text_color),
position = position_dodge2(width = 0.8),
size = 4
) +
scale_color_identity() +
labs(
x = "Race",
y = "Count",
fill = "Gender",
title = str_c("Gender/race distribution of dataset, total no. of patients: ",
sum(plot_data$count))
) +
scale_fill_manual(values = c("hotpink", "cornflowerblue", "grey35")) +
theme_minimal() +
theme(legend.position = "bottom")
quarto::quarto_render(input = "01_load.qmd",
output_format = "html")
quarto::quarto_render(input = "02_clean.qmd",
output_format = "html")
quarto::quarto_render(input = "03_augment.qmd",
output_format = "html")
quarto::quarto_render(input = "04_description.qmd",
output_format = "html")
quarto::quarto_render(input = "05_visualizations.qmd",
output_format = "html")
quarto::quarto_render(input = "06_analysis_PCA.qmd",
output_format = "html")
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
numeric_data <- aug_data |>
select(where(is.numeric)) |>
na.omit() |>
select(where(~ var(., na.rm = TRUE) > 0))
pca_fit <- numeric_data |>
prcomp(scale = TRUE)
data_clean <- aug_data |>
filter(row_number() %in% rownames(numeric_data))
pca_plot <- pca_fit |>
augment(data_clean) |>
ggplot(aes(.fittedPC1, .fittedPC2)) +
geom_point(size = 1.5) +
theme_half_open(12) +
background_grid()
pca_plot
pca_fit |>
tidy(matrix = "rotation")
# arrow for plotting
arrow_style <- arrow(
angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)
# rotation matrix
pca_fit |>
tidy(matrix = "rotation") |>
pivot_wider(names_from = "PC",
names_prefix = "PC",
values_from = "value") |>
ggplot(aes(PC1, PC2)) +
geom_segment(xend = 0,
yend = 0,
arrow = arrow_style) +
geom_text_repel(
aes(label = column),
hjust = 1, nudge_x = -0.02,
color = "#904C2F"
) +
xlim(-1.25, .5) +
ylim(-.5, 1) +
coord_fixed() +
theme_minimal_hgrid(12)
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
numeric_data <- aug_data |>
select(where(is.numeric)) |>
na.omit() |>
select(where(~ var(., na.rm = TRUE) > 0))
pca_fit <- numeric_data |>
prcomp(scale = TRUE)
data_clean <- aug_data |>
filter(row_number() %in% rownames(numeric_data))
pca_plot <- pca_fit |>
augment(data_clean) |>
ggplot(aes(.fittedPC1, .fittedPC2)) +
geom_point(size = 1.5) +
theme_half_open(12) +
background_grid()
pca_plot
pca_fit |>
tidy(matrix = "rotation")
# arrow for plotting
arrow_style <- arrow(
angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)
# rotation matrix
pca_fit |>
tidy(matrix = "rotation") |>
pivot_wider(names_from = "PC",
names_prefix = "PC",
values_from = "value") |>
ggplot(aes(PC1, PC2)) +
geom_segment(xend = 0,
yend = 0,
arrow = arrow_style) +
geom_text(
aes(label = column),
hjust = 1, nudge_x = -0.02,
color = "#904C2F"
) +
xlim(-1.25, .5) +
ylim(-.5, 1) +
coord_fixed() +
theme_minimal_hgrid(12)
pca_fit |>
tidy(matrix = "eigenvalues")
pca_bar_plot <- pca_fit |>
tidy(matrix = "eigenvalues") |>
ggplot(aes(PC, percent)) +
geom_col(fill = "#56B4E9",
alpha = 0.8) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(
labels = scales::percent_format(),
expand = expansion(mult = c(0, 0.01))
) +
theme_minimal_hgrid(12)
pca_bar_plot
ggsave(
filename = here("results", "05_pca_plot.png"),
plot = pca_plot,
width = 8,
height = 6,
dpi = 300
)
ggsave(
filename = here("results", "05_pca_bar_plot.png"),
plot = pca_bar_plot,
width = 8,
height = 6,
dpi = 300
)
pca_data <- as.data.frame(pca_fit$x)
ggplot(pca_data, aes(x = PC1, y = PC2, color = PC3)) +
geom_point(size = 1.5) +
theme_minimal() +
labs(x = "PC1", y = "PC2", color = "PC3") +
scale_color_gradient(low = "blue", high = "red")
pca_data <- pca_data |>
mutate(cluster = kmeans(select(pca_data, 1:3), centers = 3)$cluster) |>
mutate(cluster = as.factor(cluster))
# Plot in 2D
pca_data |>
ggplot(aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
theme_minimal()
quarto::quarto_render(input = "01_load.qmd",
output_format = "html")
quarto::quarto_render(input = "02_clean.qmd",
output_format = "html")
quarto::quarto_render(input = "03_augment.qmd",
output_format = "html")
quarto::quarto_render(input = "04_description.qmd",
output_format = "html")
quarto::quarto_render(input = "05_visualizations.qmd",
output_format = "html")
quarto::quarto_render(input = "06_analysis_PCA.qmd",
output_format = "html")
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
library(here)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
numeric_data <- aug_data |>
select(where(is.numeric)) |>
na.omit() |>
select(where(~ var(., na.rm = TRUE) > 0))
pca_fit <- numeric_data |>
prcomp(scale = TRUE)
data_clean <- aug_data |>
filter(row_number() %in% rownames(numeric_data))
pca_plot <- pca_fit |>
augment(data_clean) |>
ggplot(aes(.fittedPC1, .fittedPC2)) +
geom_point(size = 1.5) +
theme_half_open(12) +
background_grid()
pca_plot
pca_fit |>
tidy(matrix = "rotation")
# arrow for plotting
arrow_style <- arrow(
angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)
# rotation matrix
pca_fit |>
tidy(matrix = "rotation") |>
pivot_wider(names_from = "PC",
names_prefix = "PC",
values_from = "value") |>
ggplot(aes(PC1, PC2)) +
geom_segment(xend = 0,
yend = 0,
arrow = arrow_style) +
geom_text(
aes(label = column),
hjust = 1, nudge_x = -0.02,
color = "#904C2F"
) +
xlim(-1.25, .5) +
ylim(-.5, 1) +
coord_fixed() +
theme_minimal_hgrid(12)
pca_fit |>
tidy(matrix = "eigenvalues")
pca_bar_plot <- pca_fit |>
tidy(matrix = "eigenvalues") |>
ggplot(aes(PC, percent)) +
geom_col(fill = "#56B4E9",
alpha = 0.8) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(
labels = scales::percent_format(),
expand = expansion(mult = c(0, 0.01))
) +
theme_minimal_hgrid(12)
pca_bar_plot
ggsave(
filename = here("results", "05_pca_plot.png"),
plot = pca_plot,
width = 8,
height = 6,
dpi = 300
)
ggsave(
filename = here("results", "05_pca_bar_plot.png"),
plot = pca_bar_plot,
width = 8,
height = 6,
dpi = 300
)
pca_data <- as.data.frame(pca_fit$x)
ggplot(pca_data, aes(x = PC1, y = PC2, color = PC3)) +
geom_point(size = 1.5) +
theme_minimal() +
labs(x = "PC1", y = "PC2", color = "PC3") +
scale_color_gradient(low = "blue", high = "red")
pca_data <- pca_data |>
mutate(cluster = kmeans(select(pca_data, 1:3), centers = 3)$cluster) |>
mutate(cluster = as.factor(cluster))
# Plot in 2D
pca_data |>
ggplot(aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
theme_minimal()
quarto::quarto_render(input = "01_load.qmd",
output_format = "html")
quarto::quarto_render(input = "02_clean.qmd",
output_format = "html")
quarto::quarto_render(input = "03_augment.qmd",
output_format = "html")
quarto::quarto_render(input = "04_description.qmd",
output_format = "html")
quarto::quarto_render(input = "05_visualizations.qmd",
output_format = "html")
quarto::quarto_render(input = "06_analysis_PCA.qmd",
output_format = "html")
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
library(here)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
library(here)
aug_data <- read_csv("data/03_dat_aug.csv")
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
library(here)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
library(tidyverse)
library(broom)
library(cowplot)
library(ggplot2)
library(here)
aug_data <- read_csv(here("data/03_dat_aug.csv"))
numeric_data <- aug_data |>
select(where(is.numeric)) |>
na.omit() |>
select(where(~ var(., na.rm = TRUE) > 0))
pca_fit <- numeric_data |>
prcomp(scale = TRUE)
data_clean <- aug_data |>
filter(row_number() %in% rownames(numeric_data))
pca_plot <- pca_fit |>
augment(data_clean) |>
ggplot(aes(.fittedPC1, .fittedPC2)) +
geom_point(size = 1.5) +
theme_half_open(12) +
background_grid()
pca_plot
pca_fit |>
tidy(matrix = "rotation")
# arrow for plotting
arrow_style <- arrow(
angle = 20, ends = "first", type = "closed", length = grid::unit(8, "pt")
)
# rotation matrix
pca_fit |>
tidy(matrix = "rotation") |>
pivot_wider(names_from = "PC",
names_prefix = "PC",
values_from = "value") |>
ggplot(aes(PC1, PC2)) +
geom_segment(xend = 0,
yend = 0,
arrow = arrow_style) +
geom_text(
aes(label = column),
hjust = 1, nudge_x = -0.02,
color = "#904C2F"
) +
xlim(-1.25, .5) +
ylim(-.5, 1) +
coord_fixed() +
theme_minimal_hgrid(12)
pca_fit |>
tidy(matrix = "eigenvalues")
pca_bar_plot <- pca_fit |>
tidy(matrix = "eigenvalues") |>
ggplot(aes(PC, percent)) +
geom_col(fill = "#56B4E9",
alpha = 0.8) +
scale_x_continuous(breaks = 1:9) +
scale_y_continuous(
labels = scales::percent_format(),
expand = expansion(mult = c(0, 0.01))
) +
theme_minimal_hgrid(12)
pca_bar_plot
ggsave(
filename = here("results", "05_pca_plot.png"),
plot = pca_plot,
width = 8,
height = 6,
dpi = 300
)
ggsave(
filename = here("results", "05_pca_bar_plot.png"),
plot = pca_bar_plot,
width = 8,
height = 6,
dpi = 300
)
pca_data <- as.data.frame(pca_fit$x)
ggplot(pca_data, aes(x = PC1, y = PC2, color = PC3)) +
geom_point(size = 1.5) +
theme_minimal() +
labs(x = "PC1", y = "PC2", color = "PC3") +
scale_color_gradient(low = "blue", high = "red")
pca_data <- pca_data |>
mutate(cluster = kmeans(select(pca_data, 1:3), centers = 3)$cluster) |>
mutate(cluster = as.factor(cluster))
# Plot in 2D
pca_data |>
ggplot(aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
theme_minimal()
quarto::quarto_render(input = "01_load.qmd",
output_format = "html")
quarto::quarto_render(input = "02_clean.qmd",
output_format = "html")
quarto::quarto_render(input = "03_augment.qmd",
output_format = "html")
quarto::quarto_render(input = "04_description.qmd",
output_format = "html")
quarto::quarto_render(input = "05_visualizations.qmd",
output_format = "html")
quarto::quarto_render(input = "06_analysis_PCA.qmd",
output_format = "html")
quarto::quarto_render(input = "07_shiny.qmd",
output_format = "html")
file.rename(from = "00_all.html",
to = "../results/00_all.html")
