"0","# First the data will be loaded into a dataframe of one column"
"0","ICD9_short <- read_delim(here(""data/_raw/CMS32_DESC_SHORT_DX.txt""), "
"0","                 col_names = ""data"", "
"0","                 show_col_types = FALSE, "
"0","                 delim = ""\n"")"
"0",""
"0","ICD9_long <- read_delim(here(""data/_raw/CMS32_DESC_LONG_DX.txt""), "
"0","                 col_names = ""data"", "
"0","                 show_col_types = FALSE, "
"0","                 delim = ""\n"")"
"0",""
"0","#The long dataset includes é and è in for example Ménière's disease. To deal with this, the data is converted to UTF-8"
"0","ICD9_long <- ICD9_long |> "
"0","  mutate(data = iconv(data, "
"0","        from = ""latin1"", "
"0","        to = ""UTF-8"", "
"0","        sub = ""byte""))"
"0",""
"0","# The first value in each row is the ID, but the delimiter is not preserved. Each row is therefore split at the first, and everything else is merged into the second column:"
"0",""
"0","ICD9_short <- ICD9_short |> "
"0","  separate(col = data,"
"0","           into = c(""ID"", ""Description_short""), "
"0","           extra = ""merge"")"
"0",""
"0","ICD9_long <- ICD9_long |> "
"0","  separate(col = data,"
"0","           into = c(""ID"", ""Description_long""), "
"0","           extra = ""merge"")"
"0",""
"0","# The long and short dataframe, should have identical IDs, however in case there are some differences, we want all data, and therefore use full_join"
"0","ICD9 <- full_join(ICD9_short, "
"0","                 ICD9_long, "
"0","                 by = ""ID"")"
"0",""
"0","suppressWarnings({"
"0","ICD9 <- ICD9 |> "
"0","  mutate(ID2 = ifelse(str_starts(ID, ""[VE]""),"
"0","                     ID,"
"0","                     as.double(str_c(substr(ID,1,3),"
"0","                           ""."","
"0","                           substr(ID,4,length(ID))))))"
"0","})"
